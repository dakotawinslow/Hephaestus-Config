# This file contains common pin mappings for the BIGTREETECH mcu_toolhead_0
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.

[mcu mcu_toolhead_0]
serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
#canbus_uuid: 0e0d81e4210c

[adxl345]
cs_pin: mcu_toolhead_0: PB12
spi_software_sclk_pin: mcu_toolhead_0: PB10
spi_software_mosi_pin: mcu_toolhead_0: PB11
spi_software_miso_pin: mcu_toolhead_0: PB2
axes_map: x,y,z

[resonance_tester]
probe_points: 150, 150, 20
accel_chip: adxl345

[extruder]
step_pin: mcu_toolhead_0: PD0
dir_pin: !mcu_toolhead_0: PD1
enable_pin: !mcu_toolhead_0: PD2
microsteps: 16
rotation_distance: 47.088
gear_ratio: 9:1
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: mcu_toolhead_0: PB13
sensor_type: EPCOS 100K B57560G104F
sensor_pin: mcu_toolhead_0: PA3
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 250

# sensor_type:MAX31865
# sensor_pin: mcu_toolhead_0: PA4
# spi_bus: spi1
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: mcu_toolhead_0: PA15
run_current: 0.650
stealthchop_threshold: 999999

[fan]
pin: mcu_toolhead_0: PA0

[heater_fan hotend_fan]
pin: mcu_toolhead_0: PA1
heater: extruder
heater_temp: 50.0

[neopixel hotend_rgb]
pin: mcu_toolhead_0:PD3
chain_count: 3
initial_RED: 1
initial_GREEN: 1
initial_BLUE: 1

[filament_switch_sensor TH0_filament]
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
#debounce_delay:
#   A period of time in seconds to debounce events prior to running the
#   switch gcode. The switch must he held in a single state for at least
#   this long to activate. If the switch is toggled on/off during this delay,
#   the event is ignored. Default is 0.
switch_pin: ^mcu_toolhead_0:PB5

[probe]
pin: ^mcu_toolhead_0:PB6
